import{_ as o,r as l,o as c,c as r,f as d,d as p,w as e,b as a,a as s,e as u}from"./app-2c72f79b.js";const v={},b=s("h1",{id:"解决-vite-引入-variables-变量样式文件报错-this-file-is-already-being-loaded-问题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#解决-vite-引入-variables-变量样式文件报错-this-file-is-already-being-loaded-问题","aria-hidden":"true"},"#"),a(" 解决 Vite 引入 variables 变量样式文件报错 This file is already being loaded 问题")],-1),m=s("p",null,[a("之前脚手架使用的 Vue Cli 的时候，一般样式文件会定义一个变量样式文件，如"),s("code",null,"variables.scss"),a("，会在"),s("code",null,"vue.config"),a("中全局引入，而"),s("code",null,"variables.scss"),a("中也会通过"),s("code",null,":export"),a("的形式将变量导出，这样也方便在其他文件如 js 中引入相关变量。")],-1),k=s("div",{class:"language-scss line-numbers-mode","data-ext":"scss"},[s("pre",{class:"language-scss"},[s("code",null,[s("span",{class:"token property"},[s("span",{class:"token variable"},"$main-color")]),s("span",{class:"token punctuation"},":"),a(" #2f54eb"),s("span",{class:"token punctuation"},";"),a(`

`),s("span",{class:"token selector"},":export "),s("span",{class:"token punctuation"},"{"),a(`
  `),s("span",{class:"token property"},"mainColor"),s("span",{class:"token punctuation"},":"),a(),s("span",{class:"token variable"},"$main-color"),s("span",{class:"token punctuation"},";"),a(`
`),s("span",{class:"token punctuation"},"}"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),h=s("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[s("pre",{class:"language-javascript"},[s("code",null,[s("span",{class:"token keyword"},"import"),a(" variables "),s("span",{class:"token keyword"},"from"),a(),s("span",{class:"token string"},"'@/styles/variables.scss'"),a(`
console`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),a("variables"),s("span",{class:"token punctuation"},"."),a("mainColor"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token comment"},"// #2f54eb"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),g=u(`<h2 id="vite-引用问题" tabindex="-1"><a class="header-anchor" href="#vite-引用问题" aria-hidden="true">#</a> Vite 引用问题</h2><p>在 Vite 中同样也可以<code>vite.config</code>中进行全局变量的引入，如下形式：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>css<span class="token operator">:</span> <span class="token punctuation">{</span>
  preprocessorOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
    scss<span class="token operator">:</span> <span class="token punctuation">{</span>
      additionalData<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
          @import &quot;./src/styles/variables.scss&quot;;
        </span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时在其他文件如 js 中通过<code>import variables</code>的形式引入该文件的时候会报一个<code>This file is already being loaded.</code>的错误，大致意思该文件已经全局引入了，不能够在其他地方再次引入，网上 Google 搜索了一圈也没看到啥好的解决方法，最后只找到一个取巧的方式。</p><h2 id="取巧方式" tabindex="-1"><a class="header-anchor" href="#取巧方式" aria-hidden="true">#</a> 取巧方式</h2><p>由于在<code>vite.config</code>中已经全局引入<code>variables.scss</code>文件，在 scss 文件中都可以使用里面的变量，所以可以新建一个<code>variables.module.scss</code>的文件，里面只需要留导出变量的内容。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">:export </span><span class="token punctuation">{</span>
  <span class="token property">mainColor</span><span class="token punctuation">:</span> <span class="token variable">$main-color</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样其他文件在需要使用<code>variables.scss</code>中变量的时候只需要<code>import</code> <code>variables.module.scss</code>文件即可，这样就不会触发全局引入的情况下在其他文件再次引入的时候报错问题。</p>`,8);function f(_,x){const t=l("CodeTabs");return c(),r("div",null,[b,m,d(" more "),p(t,{id:"7",data:[{id:"variables.scss"},{id:"other.js"}]},{title0:e(({value:n,isActive:i})=>[a("variables.scss")]),title1:e(({value:n,isActive:i})=>[a("other.js")]),tab0:e(({value:n,isActive:i})=>[k]),tab1:e(({value:n,isActive:i})=>[h]),_:1},8,["data"]),g])}const V=o(v,[["render",f],["__file","fix-vite-import-variables-file-already-being-loaded-error.html.vue"]]);export{V as default};
