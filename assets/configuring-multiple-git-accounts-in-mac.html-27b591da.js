import{_ as t,r,o as l,c as d,f as c,a as e,b as a,d as s,e as n}from"./app-2c72f79b.js";const o={},g=e("h1",{id:"mac-中配置多个-git-账号",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mac-中配置多个-git-账号","aria-hidden":"true"},"#"),a(" Mac 中配置多个 Git 账号")],-1),h=e("p",null,"记录下日常开发中需要同时配置 Github、Gitlab、Gitee 多 Git 账号情况。",-1),p=n(`<h2 id="清空全局用户配置" tabindex="-1"><a class="header-anchor" href="#清空全局用户配置" aria-hidden="true">#</a> 清空全局用户配置</h2><p>如果之前使用过<code>--global</code>设置过全局的用户名和邮箱，需要使用下面的命令清空掉。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> user.name
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> user.email
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成密钥" tabindex="-1"><a class="header-anchor" href="#生成密钥" aria-hidden="true">#</a> 生成密钥</h2><p>使用下面的命令生成所需要的各平台密钥。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&#39;Github邮箱&#39;</span> <span class="token parameter variable">-f</span> ~/.ssh/id_rsa_github
ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&#39;Gitlab邮箱&#39;</span> <span class="token parameter variable">-f</span> ~/.ssh/id_rsa_gitlab
ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&#39;Gitee邮箱&#39;</span> <span class="token parameter variable">-f</span> ~/.ssh/id_rsa_gitee
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进入到<code>.ssh</code>文件中就能看到新生成的这几个密钥文件了。</p><figure><img src="https://image.liubing.me/i/2023/03/17/64142d1e05ac1.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="配置密钥" tabindex="-1"><a class="header-anchor" href="#配置密钥" aria-hidden="true">#</a> 配置密钥</h2><h3 id="github" tabindex="-1"><a class="header-anchor" href="#github" aria-hidden="true">#</a> Github</h3>`,10),u={href:"https://github.com/settings/keys",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"New SSH key",-1),b=n('<figure><img src="https://image.liubing.me/i/2023/03/17/64142dfd99e61.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>填写一个容易记住的 Title，复制密钥内容填入 Key，密钥内容可通过<code>cat id_rsa_github.pub</code>查看<code>pub</code>文件中的密钥，密钥内容以<code>ssh-rsa</code>开头，<code>Github邮箱</code>为结尾。</p><figure><img src="https://image.liubing.me/i/2023/03/17/64142ff194b46.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://image.liubing.me/i/2023/03/17/64142eb59ac99.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="gitlab" tabindex="-1"><a class="header-anchor" href="#gitlab" aria-hidden="true">#</a> Gitlab</h3>',5),v={href:"https://gitlab.com/-/profile/keys",target:"_blank",rel:"noopener noreferrer"},f=e("figure",null,[e("img",{src:"https://image.liubing.me/i/2023/03/17/6414321a94fe1.png",alt:"image",tabindex:"0",loading:"lazy"}),e("figcaption",null,"image")],-1),_=e("h3",{id:"gitee",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gitee","aria-hidden":"true"},"#"),a(" Gitee")],-1),k={href:"https://gitee.com/profile/sshkeys",target:"_blank",rel:"noopener noreferrer"},x=e("br",null,null,-1),y=e("img",{src:"https://image.liubing.me/i/2023/03/17/641431274903d.png",alt:"image",loading:"lazy"},null,-1),G=n(`<h2 id="配置-config" tabindex="-1"><a class="header-anchor" href="#配置-config" aria-hidden="true">#</a> 配置 Config</h2><p>在<code>.ssh</code>中新建一个<code>config</code>文件。</p><div class="language-ssh line-numbers-mode" data-ext="ssh"><pre class="language-ssh"><code>cd ~/.ssh
touch config
vim config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过<code>vim</code>编辑该文件，填入以下配置内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Host github.com
HostName github.com
User github邮箱
IdentityFile ~/.ssh/id_rsa_github

Host gitlab.com
HostName gitlab.com
User gitlab邮箱
IdentityFile ~/.ssh/id_rsa_gitlab

Host gitee.com
HostName gitee.com
User gitee邮箱
IdentityFile ~/.ssh/id_rsa_gitee
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试连通性" tabindex="-1"><a class="header-anchor" href="#测试连通性" aria-hidden="true">#</a> 测试连通性</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com
<span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@gitlab.com
<span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@gitee.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以 Github 为例，首次输入<code>ssh -T git@github.com</code>后会提示<code>Are you sure you want to continue connecting\`\`，输入yes</code>后如果看到<code>successfully</code>字样说明就成功了，如果出现<code>Permission denied</code>说明失败，需要检查密钥是否配置以及是否复制有误。</p><figure><img src="https://image.liubing.me/i/2023/03/17/641437b04ab61.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure>`,9);function S(H,N){const i=r("ExternalLinkIcon");return l(),d("div",null,[g,h,c(" more "),p,e("p",null,[a("Github 可在"),e("a",u,[a("SSH and GPG keys"),s(i)]),a("中点击"),m,a("按钮来添加 SSH key。")]),b,e("p",null,[a("同理 Github，可在 User Settings - "),e("a",v,[a("SSH Keys"),s(i)]),a("中配置")]),f,_,e("p",null,[a("同理 Github，可在设置-"),e("a",k,[a("SSH 公钥"),s(i)]),a("中配置。"),x,y]),G])}const C=t(o,[["render",S],["__file","configuring-multiple-git-accounts-in-mac.html.vue"]]);export{C as default};
