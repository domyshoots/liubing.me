import{_ as i,r as o,o as p,c,f as l,a as n,b as a,d as e,e as t}from"./app-2c72f79b.js";const u={},d=n("h1",{id:"uni-app-微信小程序接入人脸核身-sdk",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uni-app-微信小程序接入人脸核身-sdk","aria-hidden":"true"},"#"),a(" uni-app 微信小程序接入人脸核身 SDK")],-1),r=n("figure",null,[n("img",{src:"https://image.liubing.me/2019/12/26/336a94e239a5f.png",alt:"image",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image")],-1),g=n("p",null,"这几天使用 uni-app 开发某银行的一个微信小程序，需要集成接入腾讯云的人脸核身 SDK，如上图所示，记录下整合接入过程及踩的一些坑，帮助后面需要的朋友们。关于 uni-app 接入人脸核身 SDK 有不懂的地方可以在下面提问，看到会及时回复。",-1),k=n("h2",{id:"申请服务",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#申请服务","aria-hidden":"true"},"#"),a(" 申请服务")],-1),m=n("br",null,null,-1),b=n("br",null,null,-1),f=n("br",null,null,-1),h=n("br",null,null,-1),v=n("br",null,null,-1),_=n("br",null,null,-1),x=n("br",null,null,-1),y=n("br",null,null,-1),z=n("br",null,null,-1),w=n("code",null,"wx.startFacialRecognitionVerify",-1),q=n("br",null,null,-1),S=n("strong",null,"SDK 服务",-1),D={href:"https://cloud.tencent.com/apply/p/shcgszvmppc",target:"_blank",rel:"noopener noreferrer"},K=n("br",null,null,-1),T=n("strong",null,"小程序",-1),B={href:"https://developers.weixin.qq.com/community/business/doc/000442d352c1202bd498ecb105c00d",target:"_blank",rel:"noopener noreferrer"},V=t('<div class="hint-container warning"><p class="hint-container-title">重要的事情说 3 遍</p><p>以上这 2 个服务都需要申请，缺一不可。<br> 以上这 2 个服务都需要申请，缺一不可。<br> 以上这 2 个服务都需要申请，缺一不可。</p></div><h2 id="下载-sdk" tabindex="-1"><a class="header-anchor" href="#下载-sdk" aria-hidden="true">#</a> 下载 SDK</h2><p>由于不是我申请的，所以怎么下载我也不知道，听群里的人说的是 SDK 腾讯云下发给客户的。</p><h2 id="sdk-目录结构" tabindex="-1"><a class="header-anchor" href="#sdk-目录结构" aria-hidden="true">#</a> SDK 目录结构</h2><figure><img src="https://image.liubing.me/2019/12/26/cf4574b0e1e09.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="sdk-接入" tabindex="-1"><a class="header-anchor" href="#sdk-接入" aria-hidden="true">#</a> SDK 接入</h2>',6),j={href:"https://cloud.tencent.com/document/product/1007/31071",target:"_blank",rel:"noopener noreferrer"},L=n("br",null,null,-1),A=n("br",null,null,-1),N=t(`<h2 id="解压引入-sdk" tabindex="-1"><a class="header-anchor" href="#解压引入-sdk" aria-hidden="true">#</a> 解压引入 SDK</h2><p>在 uni-app 项目中新建<code>wxcomponents</code>目录，将 SDK 解压后放到该目录</p><figure><img src="https://image.liubing.me/2019/12/26/b785c22afe7c2.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p><code>pages.json</code>中<code>globalStyle</code>中全局引入小程序的组件，注意引用的路径</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string-property property">&quot;usingComponents&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;verify-mpsdk&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/wxcomponents/verify_mpsdk/index/index&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://image.liubing.me/2019/12/26/43e41f71fdb96.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="新建人脸核身页面" tabindex="-1"><a class="header-anchor" href="#新建人脸核身页面" aria-hidden="true">#</a> 新建人脸核身页面</h3><p><code>pages</code>中新建人脸核身的页面<code>face</code>(名字可以随意，根据自己的需要起名)，<br><code>pages.json</code>中配置页面</p><figure><img src="https://image.liubing.me/2019/12/26/1acb9dfe54c7a.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p><code>face</code>页面中引入<code>verify-mpsdk</code>组件</p><figure><img src="https://image.liubing.me/2019/12/26/efff0fc801e0d.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>最终的人脸核身的页面访问就是<code>/pages/face/face</code></p><h3 id="初始化-sdk" tabindex="-1"><a class="header-anchor" href="#初始化-sdk" aria-hidden="true">#</a> 初始化 SDK</h3><p>在需要的页面初始化 SDK，如有个页面需要点击按钮进行人脸核身，就在这个页面进行初始化。<br> 这个直接照着文档<code>快速入门</code>中的来就行了，这里就直接使用 uni-app 默认的<code>index</code>页面，<br> 适当修改下即可，大概代码如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@tap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gotoVerify<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>进入人脸核身<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">BizToken</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 初始化慧眼实名核身组件</span>
      <span class="token keyword">const</span> Verify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@/wxcomponents/verify_mpsdk/main.js&#39;</span><span class="token punctuation">)</span>
      Verify<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 单击进入人脸核身按钮时，触发该函数</span>
      <span class="token function">gotoVerify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>BizToken <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// 这里需要我们去客户后端调用DetectAuth接口获取BizToken</span>
        <span class="token comment">// 调用实名核身功能</span>
        wx<span class="token punctuation">.</span><span class="token function">startVerify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>BizToken <span class="token comment">// BizToken</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 验证成功后触发</span>
            <span class="token comment">// res 包含验证成功的token, 这里需要加500ms延时，防止iOS下不执行后面的逻辑</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token comment">// 验证成功后，拿到token后的逻辑处理，具体以客户自身逻辑为准</span>
              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 验证失败时触发</span>
            <span class="token comment">// err 包含错误码，错误信息，弹窗提示错误</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
              wx<span class="token punctuation">.</span><span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">content</span><span class="token operator">:</span> err<span class="token punctuation">.</span>ErrorMsg<span class="token punctuation">,</span>
                <span class="token literal-property property">showCancel</span><span class="token operator">:</span> <span class="token boolean">false</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),C=n("code",null,"BizToken",-1),E=n("br",null,null,-1),I={href:"https://cloud.tencent.com/document/api/1007/31816",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"BizToken",-1),R=n("br",null,null,-1),F=n("br",null,null,-1),O={href:"https://console.cloud.tencent.com/api/explorer?Product=faceid&Version=2018-03-01&Action=DetectAuth",target:"_blank",rel:"noopener noreferrer"},P=n("br",null,null,-1),G=n("code",null,"BizToken",-1),J=n("br",null,null,-1),W=n("code",null,"SecretId",-1),$=n("code",null,"SecretKey",-1),H=n("code",null,"RuleId",-1),Q=n("br",null,null,-1),U=n("code",null,"Endpoint",-1),X=n("code",null,"Region",-1),Y=n("br",null,null,-1),Z=n("code",null,"在线调用",-1),nn=n("code",null,"发送请求",-1),an=n("code",null,"BizToken",-1),sn=n("br",null,null,-1),en=n("code",null,"BizToken",-1),tn=n("br",null,null,-1),on=n("code",null,"BizToken",-1),pn=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>BizToken <span class="token operator">=</span> <span class="token string">&#39;xxxxxxxxxxxxxxxxx&#39;</span> <span class="token comment">// 这里需要我们去客户后端调用DetectAuth接口获取BizToken</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://image.liubing.me/2019/12/26/ae97b97b95ec8.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="开发调试" tabindex="-1"><a class="header-anchor" href="#开发调试" aria-hidden="true">#</a> 开发调试</h3><p>上面都做完后就可以进行调试了<br> 需要先在项目中<code>manifest.json</code>中配置上小程序的 appid，这个 appid 就是上面<code>申请服务</code>中的 appid，不然无法开启调试。</p><figure><img src="https://image.liubing.me/2019/12/26/b448bf6e38531.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>然后运行到微信开发工具（这里就不多说了），如果提示不是开发人员，就让该 appid 的管理员将你加到开发组里面就行了。<br> 运行成功后点击开发者工具的真机调试，扫描二维码开启真机调试模式。<br> 接下来就是踩坑了，会出现各种问题。</p><h2 id="踩坑及解决方法" tabindex="-1"><a class="header-anchor" href="#踩坑及解决方法" aria-hidden="true">#</a> 踩坑及解决方法</h2><h3 id="component-is-not-found-in-path" tabindex="-1"><a class="header-anchor" href="#component-is-not-found-in-path" aria-hidden="true">#</a> Component is not found in path</h3><p>这里开发者工具里面都是显示正常的，不会报这个错，<br> 手机扫码进入调试后控制台会出现这个报错，<br> 提示组件找不到，但是我们的路径都是对的，<br><code>Component is not found in path &quot;wxcomponents/verify_mpsdk/index/index&quot;</code></p><figure><img src="https://image.liubing.me/2019/12/26/add318ae96511.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>问题出在这里将<code>verify_mpsdk</code>当成自定义组件了，<br> 小程序自定义组件引入的时候需要在文件 JSON 中指定<code>&quot;component&quot;: true</code><br> 找到<code>wxcomponents\\verify_mpsdk\\index\\index.json</code>文件，加入<code>&quot;component&quot;: true</code>即可<br> 重新开启调试扫码后上面的报错就没了。</p><figure><img src="https://image.liubing.me/2019/12/26/5b68735163aca.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="navigateto-fail-page" tabindex="-1"><a class="header-anchor" href="#navigateto-fail-page" aria-hidden="true">#</a> navigateTo:fail page</h3><p>点击按钮调用<code>gotoVerify</code>后会报一个页面找不到的错<br><code>navigateTo:fail page &quot;verify_mpsdk/index/index?isNotice=false&quot; is not found</code></p><figure><img src="https://image.liubing.me/2019/12/26/1d7b45b526df2.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>SDK 默认的是跳转验证页面的地址是<code>verify_mpsdk/index/index</code>，<br> 文档找了半天也没找到相应的配置地址，最后在 SDK 里面搜索找到了这个地址。<br> 所以只需要把这个地址改成我们所需要的地址就行了。<br> 找到<code>wxcomponents\\verify_mpsdk\\main.js</code>，里面搜索<code>verify_mpsdk/index/index</code>,<br> 找到后修改成上面<code>人脸核身页面</code>的地址<code>pages/face/face</code><br> 保存后重试就能跳转到人脸核身的页面了。</p><h3 id="无操作、无报错大坑" tabindex="-1"><a class="header-anchor" href="#无操作、无报错大坑" aria-hidden="true">#</a> 无操作、无报错大坑</h3><p>进入人脸核身的页面后会发现啥操作都没，控制台也没报错</p><figure><img src="https://image.liubing.me/2019/12/26/00c9d4aa17b74.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>一度认为我自己弄的有问题，搞了好久也没弄好，也提了个工单（腾讯云工单反馈率还是很快的，几分钟后就有人回复了，这点赞一个），<br> 将代码和相关操作在工单里描述了下，对方也觉得的没问题，按照快速入门的代码应该是没问题的，<br> 对方也没找到啥问题，就让我加了一个腾讯云慧眼小助手的微信，<br> 本想着下午加人家看看啥问题的，中午吃完饭闲着的时候将 SDK 里面的文件都格式化后终于在<code>index.js</code>里面找到问题所在了。<br><code>wxcomponents\\verify_mpsdk\\index\\index.js</code>文件中有个<code>onLoad</code>生命周期，</p><figure><img src="https://image.liubing.me/2019/12/26/62818e83c0ca7.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>正常原生微信小程序进入到这个页面的时候会执行<code>onLoad</code>里面的代码，<br> 但是我们上面将这个 SDK 当作是一个自定义组件了，<br> 在 uni-app 中组件是不存在<code>onLoad</code>这个生命周期的，这个是页面所属的生命周期。<br> 找到问题所在就好解决了，我们可以在人脸核身的页面<code>pages/face/face</code>手动执行<code>onLoad</code><br> 修改下<code>pages/face/face</code>的代码，如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>face<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>verify-mpsdk</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>verifyMpsdk<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>verify-mpsdk</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 页面onLoad的时候手动调用</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>verifyMpsdk<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存后重试，就能正常显示了</p><figure><img src="https://image.liubing.me/2019/12/26/cb1aea18b95b0.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="sdk-图片异常" tabindex="-1"><a class="header-anchor" href="#sdk-图片异常" aria-hidden="true">#</a> SDK 图片异常</h3><p>点击快速验证进入下一步及后面的步骤的时候发现，页面的图片都挂掉了不显示，<br> 一开始我一直用的真机调试，页面上也不会出现破图，控制台也不会报图片异常的错误，<br> 导致我不知道怎么进行拍摄身份证，以为会自动识别身份证然后自动下一步，<br> 最后在开发者工具里面跑了一遍才知道是图片找不到了，然后拍照的图片按钮自然也就显示不了了。</p><figure><img src="https://image.liubing.me/2019/12/26/f685179d955a3.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://image.liubing.me/2019/12/26/e7198199e28a6.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>最后在 SDK 里面搜索<code>/verify_mpsdk/images</code>，在下面文件中找到关键词，<br><code>wxcomponents\\verify_mpsdk\\templates\\ocr\\ocr.wxml</code></p><figure><img src="https://image.liubing.me/2019/12/26/66e2a7217386c.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>既然这种形式导致运行的时候图片找不到，我们可以把 SDK 所用的图片都复制到项目的<code>static</code>目录里<br> 在<code>static</code>中新建<code>verify_mpsdk</code>目录，将 SDK 中的图片即<code>wxcomponents\\verify_mpsdk\\images</code><br> 复制到<code>static\\verify_mpsdk</code>中，最终形成以下目录形式</p><figure><img src="https://image.liubing.me/2019/12/26/15041760d4833.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>最后将<code>wxcomponents\\verify_mpsdk\\templates\\ocr\\ocr.wxml</code>中的<code>/verify_mpsdk/images</code>批量替换成<br><code>/static/verify_mpsdk/images</code>后重试即可，然后就都正常了。</p><figure><img src="https://image.liubing.me/2019/12/26/d107501ee8a40.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://image.liubing.me/2019/12/26/2c761686d6f2a.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="完整流程" tabindex="-1"><a class="header-anchor" href="#完整流程" aria-hidden="true">#</a> 完整流程</h2><p>最后用真机调试完整跑一把</p><figure><img src="https://image.liubing.me/2019/12/26/361a820e125be.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://image.liubing.me/2019/12/26/c4a2e95b835ac.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://image.liubing.me/2019/12/26/edc4314b7947d.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://image.liubing.me/2019/12/26/bf8aa4ae266d1.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><blockquote><p>备注：如果最上面的<code>wx.startFacialRecognitionVerify</code>服务没有申请到此时点击下一步的会弹出一个无权限的弹窗无法进行下一步</p></blockquote><figure><img src="https://image.liubing.me/2019/12/26/42a2a5cf13274.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://image.liubing.me/2019/12/26/8ae35e6337fc6.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><blockquote><p>这里就是活体人脸检测了，需要将脸对准框框，点击开始后需要读几个数字，</p></blockquote><figure><img src="https://image.liubing.me/2019/12/26/a56b3945a5220.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure>`,47),cn=n("code",null,"BizToken",-1),ln=n("br",null,null,-1),un=n("code",null,"wx.startVerify",-1),dn=n("code",null,"success",-1),rn=n("br",null,null,-1),gn=n("code",null,"BizToken",-1),kn={href:"https://cloud.tencent.com/document/api/1007/31331",target:"_blank",rel:"noopener noreferrer"},mn=n("br",null,null,-1),bn=n("h2",{id:"结语",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#结语","aria-hidden":"true"},"#"),a(" 结语")],-1),fn=n("p",null,[a("整合过程中遇到不少问题，百度加 google 也找不到相关的详细信息，"),n("br"),a(" 人脸核身的相关文档都很简单，出现问题后无从下手，只能慢慢自己摸索解决了，"),n("br"),a(" 最后写篇文章记录下整个过程，也能帮到后面需要集成这个 SDK 的朋友们。")],-1);function hn(vn,_n){const s=o("ExternalLinkIcon");return p(),c("div",null,[d,r,g,l(" more "),k,n("p",null,[a("不是所有的企业都能够申请的，需要符合以下行业要求的客户才能申请"),m,a(" 政务：政府机构或事业单位"),b,a(" 金融：银行、保险"),f,a(" 医疗：公立医疗机构"),h,a(" 运营商：电信运营商"),v,a(" 教育：公立教育机构"),_,a(" 交通：航空、客运、网约车、交通卡、共享交通、轨道交通、租车"),x,a(" 旅游：酒店"),y,a(" 物流：快递、邮政、物流"),z,a(" 由于 SDK 会调用小程序原生的"),w,a("方法，所以总共得申请 2 个服务:"),q,S,a("："),n("a",D,[a("申请人脸核身服务"),e(s)]),K,T,a("："),n("a",B,[a("查看申请流程"),e(s)]),a("（需要发送邮件申请，使用该服务的小程序的 appid，后面开发也是用的这个）")]),V,n("p",null,[a("参考腾讯云文档的接入方法："),n("a",j,[a("https://cloud.tencent.com/document/product/1007/31071"),e(s)]),L,a(" 文档是针对原生小程序写的，所以页面引入的方法有所不同"),A,a(" 由于 uni-app 不支持直接引入小程序的原生页面，所以这里能想到的就是将它当作成一个微信小程序的组件，然后 uni-app 的页面引入这个组件")]),N,n("p",null,[a("注意下这里的"),C,a(",需要调用后端服务接口来获取，"),E,a(" 需要后端的同学调用腾讯云提供的"),n("a",I,[a("DetectAuth"),e(s)]),a("来返回前端需要的"),M,a("，"),R,a(" 调试开发阶段我们可以先通过腾讯云提供的工具"),F,n("a",O,[a("API 3.0 Explorer"),e(s)]),P,a(" 直接来获取这个"),G,J,a(" 如果服务申请成功后控制台一般能找到"),W,a("，"),$,a("，"),H,Q,a(" 注意"),U,a("和"),X,a("选择的地区得保持和申请时选择的地区一致。"),Y,a(" 填写完成后点击"),Z,a("中的"),nn,a("按钮，如果填的都对的话返回信息里面会有"),an,sn,a(" 拿到"),en,a("后就可以直接使用了，修改下上面的代码："),tn,a(" xxxxxxxxxxxxxxxxx 就是拿到的"),on]),pn,n("p",null,[a("最后验证通过后会回到之前的页面（调用 gotoVerify()方法的页面）， 验证成功后，会拿到一个"),cn,a("，"),ln,a(" 可以在"),un,a("回调函数"),dn,a("中打印自行查看。"),rn,a(" 拿到"),gn,a("后可以调用后端的接口，后端通过调用 "),n("a",kn,[a("GetDetectInfo"),e(s)]),a(" 接口获取并返回本次核身的详细信息，包括身份证上的信息和身份证证图片等信息。"),mn,a(" 前端拿到这些信息后根据自己的程序需要做处理。")]),bn,fn])}const yn=i(u,[["render",hn],["__file","uni-app-wechat-verify-mpsdk.html.vue"]]);export{yn as default};
