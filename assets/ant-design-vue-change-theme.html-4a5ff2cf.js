import{_ as o,r as p,o as c,c as l,a as s,b as n,d as t,f as i,e}from"./app-2c72f79b.js";const u={},r=s("h1",{id:"ant-vue-1-x-动态自定义换肤",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ant-vue-1-x-动态自定义换肤","aria-hidden":"true"},"#"),n(" Ant Vue 1.x 动态自定义换肤")],-1),k={href:"https://pro.antdv.com/",target:"_blank",rel:"noopener noreferrer"},d=s("h2",{id:"前期研究",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前期研究","aria-hidden":"true"},"#"),n(" 前期研究")],-1),v={href:"https://github.com/vueComponent/ant-design-vue-pro/blob/master/src/components/SettingDrawer/SettingDrawer.vue#L45",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"主题色",-1),b=s("code",null,"themeColor",-1),g={href:"https://github.com/vueComponent/ant-design-vue-pro/blob/master/src/components/SettingDrawer/themeColor.js#L15",target:"_blank",rel:"noopener noreferrer"},h=s("code",null,"themeColor",-1),f=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> client <span class="token keyword">from</span> <span class="token string">&#39;webpack-theme-color-replacer/client&#39;</span>
<span class="token keyword">import</span> generate <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/colors/lib/generate&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">getAntdSerials</span><span class="token punctuation">(</span><span class="token parameter">color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 淡化（即less的tint）</span>
    <span class="token keyword">const</span> lightens <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> client<span class="token punctuation">.</span>varyColor<span class="token punctuation">.</span><span class="token function">lighten</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> i <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// colorPalette变换得到颜色值</span>
    <span class="token keyword">const</span> colorPalettes <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>
    <span class="token keyword">const</span> rgb <span class="token operator">=</span> client<span class="token punctuation">.</span>varyColor<span class="token punctuation">.</span><span class="token function">toNum3</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> lightens<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>colorPalettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>rgb<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">changeColor</span><span class="token punctuation">(</span><span class="token parameter">newColor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">newColors</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAntdSerials</span><span class="token punctuation">(</span>newColor<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// new colors array, one-to-one corresponde with \`matchColors\`</span>
      <span class="token function">changeUrl</span><span class="token punctuation">(</span><span class="token parameter">cssUrl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cssUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// while router is not \`hash\` mode, it needs absolute path</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> client<span class="token punctuation">.</span>changer<span class="token punctuation">.</span><span class="token function">changeColor</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> Promise<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y=s("code",null,"client.changer.changeColor",-1),C={href:"https://www.npmjs.com/package/webpack-theme-color-replacer",target:"_blank",rel:"noopener noreferrer"},w=e(`<h2 id="插件介绍" tabindex="-1"><a class="header-anchor" href="#插件介绍" aria-hidden="true">#</a> 插件介绍</h2><p>通过插件的基本使用介绍和 Google 搜索了解了下各配置的基本意思：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ThemeColorReplacer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-theme-color-replacer&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ..... other config</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">ThemeColorReplacer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">matchColors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#ed4040&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#4b0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;255,80,80&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;27, 92.531%, 52.745%&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// colors array for extracting css file, support rgb and hsl.</span>
      <span class="token literal-property property">fileName</span><span class="token operator">:</span> <span class="token string">&#39;css/theme-colors-[contenthash:8].css&#39;</span><span class="token punctuation">,</span> <span class="token comment">//optional. output css file name, suport [contenthash] and [hash].</span>
      <span class="token comment">// resolveCss(resultCss) { // optional. Resolve result css code as you wish.</span>
      <span class="token comment">//     return resultCss.replace(/#ccc/g, &#39;#eee&#39;)</span>
      <span class="token comment">// },</span>
      <span class="token literal-property property">externalCssFiles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;./node_modules/element-ui/lib/theme-chalk/index.css&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// optional, String or string array. Set external css files (such as cdn css) to extract colors.</span>
      <span class="token comment">// changeSelector(selector, util) { // optional, Funciton. Changing css selectors, in order to raise css priority, to resolve lazy-loading problems.</span>
      <span class="token comment">//     return util.changeEach(selector, &#39;.el-button--default&#39;)</span>
      <span class="token comment">// },</span>
      <span class="token literal-property property">injectCss</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// optional. Inject css text into js file, no need to download \`theme-colors-xxx.css\` any more.</span>
      <span class="token literal-property property">isJsUgly</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;development&#39;</span> <span class="token comment">// optional. Set to \`true\` if your js is uglified. Default is set by p<wbr>rocess.env.NODE_ENV.</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>matchColors</code>：配置插件匹配的颜色，后面会根据匹配的颜色进行新颜色替换</li><li><code>fileName</code>：生成的 css 文件名，换色的时候会自动加载该 css 覆盖原有的颜色样式</li><li><code>externalCssFiles</code>：大致意思就是如果有加载外部的 css 可以通过该参数指定，来提取里面匹配的颜色</li><li><code>changeSelector</code>：用于改变样式选择器，解决样式覆盖问题，后面会有说明。</li><li><code>injectCss</code>：是否使用内联样式，如果设置 true 的话就不会引入 fileName 配置的 css 文件，而是在 body 下面插入覆盖样式的 style 内容，可以解决路由跳转导致的样式丢失问题。</li><li><code>isJsUgly</code>：暂时不明有啥作用</li></ul><h2 id="插件原理" tabindex="-1"><a class="header-anchor" href="#插件原理" aria-hidden="true">#</a> 插件原理</h2>`,5),_={href:"https://hzsrc-vue-webpack4-elementui.netlify.app/themecolor",target:"_blank",rel:"noopener noreferrer"},x=s("code",null,"matchColors",-1),P=s("code",null,"matchColors",-1),j=s("code",null,"newColors",-1),z=s("code",null,"class",-1),A=s("code",null,"style",-1),S=e(`<figure><img src="https://image.liubing.me/2023/02/04/3154f9c34a42f.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>总结成一句话就是先配置需要变换的颜色 <code>matchColors</code> 参数，在换色的时候调用插件提供的 <code>changeColor</code> 方法传入 <code>newColors</code> 即可。</p><h2 id="插件思考" tabindex="-1"><a class="header-anchor" href="#插件思考" aria-hidden="true">#</a> 插件思考</h2><p>回头想想，在 Ant 中一种颜色会对应不同的各个颜色，比如一个主色 <code>mainColor</code>，在按钮中会有 N 多个颜色，比如鼠标悬停色、鼠标点击后颜色，Loading 加载状态的颜色等等，这些颜色都是同一个色系的，咱们目前也不知道具体有多少个同色系色值，也不太可能一个个去找，但是我们知道这些色值应该是有一套自己的生成规律的。这时候我们再看这块代码就能明白了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> client <span class="token keyword">from</span> <span class="token string">&#39;webpack-theme-color-replacer/client&#39;</span>
<span class="token keyword">import</span> generate <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/colors/lib/generate&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">getAntdSerials</span><span class="token punctuation">(</span><span class="token parameter">color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 淡化（即less的tint）</span>
    <span class="token keyword">const</span> lightens <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> client<span class="token punctuation">.</span>varyColor<span class="token punctuation">.</span><span class="token function">lighten</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> i <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// colorPalette变换得到颜色值</span>
    <span class="token keyword">const</span> colorPalettes <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>
    <span class="token keyword">const</span> rgb <span class="token operator">=</span> client<span class="token punctuation">.</span>varyColor<span class="token punctuation">.</span><span class="token function">toNum3</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> lightens<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>colorPalettes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>rgb<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">changeColor</span><span class="token punctuation">(</span><span class="token parameter">newColor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">newColors</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAntdSerials</span><span class="token punctuation">(</span>newColor<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// new colors array, one-to-one corresponde with \`matchColors\`</span>
      <span class="token function">changeUrl</span><span class="token punctuation">(</span><span class="token parameter">cssUrl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cssUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// while router is not \`hash\` mode, it needs absolute path</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> client<span class="token punctuation">.</span>changer<span class="token punctuation">.</span><span class="token function">changeColor</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> Promise<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getAntdSerials</code> 方法就很关键，通过传入一个色值，调用<code>@ant-design/colors</code> 插件提供的 <code>generate</code> 方法，生成一个从浅到深的同色系色值列表，因为 Ant 中颜色有使用 Less 的 <code>lighten</code> 和 <code>fade</code> 方法，所以额外处理了淡化色值 <code>lightens</code> 和 <code>rgb</code> 色值，通过这些组成一个颜色的一套色值。因为项目需求是多个颜色的变换，所以我们可以生成多个颜色的色值组合列表形成一个总的列表。</p><p>PS：下图是该插件内置的色系。</p><figure><img src="https://image.liubing.me/2023/02/04/f714f9edb4ca7.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="衍生色系" tabindex="-1"><a class="header-anchor" href="#衍生色系" aria-hidden="true">#</a> 衍生色系</h2>`,9),N=s("code",null,"generate",-1),V={href:"https://github.com/vueComponent/ant-design-vue/blob/1.x/components/style/color/colors.less",target:"_blank",rel:"noopener noreferrer"},T=s("code",null,"colorPalette",-1),M={href:"https://github.com/vueComponent/ant-design-vue/blob/master/components/style/themes/default.less",target:"_blank",rel:"noopener noreferrer"},D=e(`<figure><img src="https://image.liubing.me/2023/02/04/e6d93d63e3a82.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><figure><img src="https://image.liubing.me/2023/02/04/99a56553f3482.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>这时候就衍生出一个问题，在我们自己的项目中怎么去使用 <code>colorPalette</code> 也生成一套我们对应的颜色，项目平台因为考虑到后期的颜色统一，很早之前就做过一版统一色值的迭代，就是通过一个统一的 <code>variables.less</code> 文件管理所有需要的颜色变量，文件大致内容如下：</p><div class="language-less line-numbers-mode" data-ext="less"><pre class="language-less"><code><span class="token variable">@mainColor<span class="token punctuation">:</span></span> #24a8f2<span class="token punctuation">;</span>
<span class="token variable">@white<span class="token punctuation">:</span></span> #ffffff<span class="token punctuation">;</span>
<span class="token variable">@textColor<span class="token punctuation">:</span></span> #2c2f33<span class="token punctuation">;</span>

<span class="token selector">:export</span> <span class="token punctuation">{</span>
  <span class="token property">mainColor</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span>
  <span class="token property">white</span><span class="token punctuation">:</span> <span class="token variable">@white</span><span class="token punctuation">;</span>
  <span class="token property">textColor</span><span class="token punctuation">:</span> <span class="token variable">@textColor</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为该颜色变量会在每个文件都使用，不可能在每个地方挨个去引入，当时用了 Vue 的 <code>style-resources-loader</code> 插件进行全局引用（PS：该插件可以通过 <code>vue add style-resources-loader</code> 命令进行安装添加），然后在 <code>vue.config.js</code> 中配置即可：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">pluginOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">// vue add style-resources-loader添加插件</span>
  <span class="token string-property property">&#39;style-resources-loader&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">preProcessor</span><span class="token operator">:</span> <span class="token string">&#39;less&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// 自动引入全局variables.less</span>
    <span class="token literal-property property">patterns</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/styles/variables.less&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),E={href:"https://github.com/vueComponent/ant-design-vue/blob/1.x/components/style/color/colors.less",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/vueComponent/ant-design-vue/blob/1.x/components/style/color/colorPalette.less",target:"_blank",rel:"noopener noreferrer"},U=s("code",null,"colorPalette",-1),L=e('<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">pluginOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// vue add style-resources-loader添加插件</span>\n  <span class="token string-property property">&#39;style-resources-loader&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">preProcessor</span><span class="token operator">:</span> <span class="token string">&#39;less&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// 自动引入全局variables.less</span>\n    <span class="token literal-property property">patterns</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;node_modules/ant-design-vue/lib/style/color/colorPalette.less&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/styles/variables.less&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完成后我们就可以使用 Ant 的 <code>colorPalette</code> 按自己的需求在 <code>variables.less</code> 中也生成一套自己的默认颜色。</p><div class="language-less line-numbers-mode" data-ext="less"><pre class="language-less"><code><span class="token variable">@mainColor1<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 1<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@mainColor2<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 2<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@mainColor3<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 3<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@mainColor4<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 4<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@mainColor5<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 5<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@mainColor<span class="token punctuation">:</span></span> #1890ff<span class="token punctuation">;</span>\n<span class="token variable">@mainColor7<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 7<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@mainColor8<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 8<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@mainColor9<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 9<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@mainColor10<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{mainColor}&#39;</span><span class="token punctuation">,</span> 10<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">@redColor1<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 1<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@redColor2<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 2<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@redColor3<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 3<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@redColor4<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 4<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@redColor5<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 5<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@redColor<span class="token punctuation">:</span></span> #f5222d<span class="token punctuation">;</span>\n<span class="token variable">@redColor7<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 7<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@redColor8<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 8<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@redColor9<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 9<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@redColor10<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{redColor}&#39;</span><span class="token punctuation">,</span> 10<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">@greenColor1<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 1<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@greenColor2<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 2<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@greenColor3<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 3<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@greenColor4<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 4<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@greenColor5<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 5<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@greenColor<span class="token punctuation">:</span></span> #52c41a<span class="token punctuation">;</span>\n<span class="token variable">@greenColor7<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 7<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@greenColor8<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 8<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@greenColor9<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 9<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@greenColor10<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{greenColor}&#39;</span><span class="token punctuation">,</span> 10<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">@orangeColor1<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 1<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@orangeColor2<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 2<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@orangeColor3<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 3<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@orangeColor4<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 4<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@orangeColor5<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 5<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@orangeColor<span class="token punctuation">:</span></span> #faad14<span class="token punctuation">;</span>\n<span class="token variable">@orangeColor7<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 7<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@orangeColor8<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 8<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@orangeColor9<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 9<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">@orangeColor10<span class="token punctuation">:</span></span> <span class="token function">color</span><span class="token punctuation">(</span>~`<span class="token function">colorPalette</span><span class="token punctuation">(</span><span class="token string">&#39;@{orangeColor}&#39;</span><span class="token punctuation">,</span> 10<span class="token punctuation">)</span> `<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token selector">:export</span> <span class="token punctuation">{</span>\n  <span class="token property">mainColor1</span><span class="token punctuation">:</span> mainColor1<span class="token punctuation">;</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue-config-配置" tabindex="-1"><a class="header-anchor" href="#vue-config-配置" aria-hidden="true">#</a> vue.config 配置</h2>',4),O={href:"https://github.com/vueComponent/ant-design-vue-pro/blob/master/config/plugin.config.js",target:"_blank",rel:"noopener noreferrer"},q=s("code",null,"vue.config.js",-1),F=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> postcss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;postcss&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ThemeColorReplacer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-theme-color-replacer&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> generate <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@ant-design/colors/lib/generate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default
<span class="token comment">// 获取variables.less变量</span>
<span class="token keyword">const</span> <span class="token function-variable function">getVaribles</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fileUrl</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> colorsMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> lessFile <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>fileUrl<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
  postcss<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>lessFile<span class="token punctuation">)</span><span class="token punctuation">.</span>nodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>name <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> node<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> node<span class="token punctuation">.</span>params
      colorsMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> colorNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;mainColor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;greenColor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orangeColor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;redColor&#39;</span><span class="token punctuation">]</span>
  colorNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> colorPalettes <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>colorsMap<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
    colorPalettes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">color<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> i <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!==</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        colorsMap<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> color
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> colorsMap
<span class="token punctuation">}</span>
<span class="token keyword">const</span> variables <span class="token operator">=</span> <span class="token function">getVaribles</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;./src/styles/variables.less&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 获取Ant色系</span>
<span class="token keyword">const</span> <span class="token function-variable function">getAntdSerials</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">color</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 淡化（即less的tint）</span>
  <span class="token keyword">const</span> lightens <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ThemeColorReplacer<span class="token punctuation">.</span>varyColor<span class="token punctuation">.</span><span class="token function">lighten</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> i <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// colorPalette变换得到颜色值</span>
  <span class="token keyword">const</span> colorPalettes <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>
  <span class="token comment">// rgb颜色</span>
  <span class="token keyword">const</span> rgbColors <span class="token operator">=</span> colorPalettes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    ThemeColorReplacer<span class="token punctuation">.</span>varyColor<span class="token punctuation">.</span><span class="token function">toNum3</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>lightens<span class="token punctuation">,</span> <span class="token operator">...</span>colorPalettes<span class="token punctuation">,</span> <span class="token operator">...</span>rgbColors<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// 获取匹配颜色</span>
<span class="token keyword">const</span> <span class="token function-variable function">getMatchColors</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> matchColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// 颜色顺序需要严格一致</span>
  <span class="token keyword">const</span> changeColors <span class="token operator">=</span> <span class="token punctuation">[</span>
    variables<span class="token punctuation">.</span>mainColor<span class="token punctuation">,</span>
    variables<span class="token punctuation">.</span>greenColor<span class="token punctuation">,</span>
    variables<span class="token punctuation">.</span>orangeColor<span class="token punctuation">,</span>
    variables<span class="token punctuation">.</span>redColor
  <span class="token punctuation">]</span>
  changeColors<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">color</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    matchColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>matchColors<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token function">getAntdSerials</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> matchColors
<span class="token punctuation">}</span>
<span class="token comment">// ThemeColorReplacer插件配置</span>
<span class="token keyword">const</span> ThemeColorReplacerPlugin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThemeColorReplacer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">matchColors</span><span class="token operator">:</span> <span class="token function">getMatchColors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 匹配颜色</span>
  <span class="token literal-property property">injectCss</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 改变样式选择器，解决样式覆盖问题</span>
  <span class="token function">changeSelector</span><span class="token punctuation">(</span><span class="token parameter">selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>selector<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// case &#39;.ant-calendar-today .ant-calendar-date&#39;:</span>
      <span class="token comment">//   return &#39;:not(.ant-calendar-selected-date):not(.ant-calendar-selected-day)&#39; + selector</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-btn:focus,.ant-btn:hover&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;.ant-btn:focus:not(.ant-btn-primary):not(.ant-btn-danger):not(.ant-btn-link),.ant-btn:hover:not(.ant-btn-primary):not(.ant-btn-danger):not(.ant-btn-link)&#39;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-btn.active,.ant-btn:active&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;.ant-btn.active:not(.ant-btn-primary):not(.ant-btn-danger):not(.ant-btn-link),.ant-btn:active:not(.ant-btn-primary):not(.ant-btn-danger):not(.ant-btn-link)&#39;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-steps-item-process .ant-steps-item-icon &gt; .ant-steps-icon&#39;</span><span class="token operator">:</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-steps-item-process .ant-steps-item-icon&gt;.ant-steps-icon&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;:not(.ant-steps-item-process)&#39;</span> <span class="token operator">+</span> selector
      <span class="token comment">// fixed https://github.com/vueComponent/ant-design-vue-pro/issues/876</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-steps-item-process .ant-steps-item-icon&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;:not(.ant-steps-item-custom)&#39;</span> <span class="token operator">+</span> selector
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-menu-horizontal&gt;.ant-menu-item-active,.ant-menu-horizontal&gt;.ant-menu-item-open,.ant-menu-horizontal&gt;.ant-menu-item-selected,.ant-menu-horizontal&gt;.ant-menu-item:hover,.ant-menu-horizontal&gt;.ant-menu-submenu-active,.ant-menu-horizontal&gt;.ant-menu-submenu-open,.ant-menu-horizontal&gt;.ant-menu-submenu-selected,.ant-menu-horizontal&gt;.ant-menu-submenu:hover&#39;</span><span class="token operator">:</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-menu-horizontal &gt; .ant-menu-item-active,.ant-menu-horizontal &gt; .ant-menu-item-open,.ant-menu-horizontal &gt; .ant-menu-item-selected,.ant-menu-horizontal &gt; .ant-menu-item:hover,.ant-menu-horizontal &gt; .ant-menu-submenu-active,.ant-menu-horizontal &gt; .ant-menu-submenu-open,.ant-menu-horizontal &gt; .ant-menu-submenu-selected,.ant-menu-horizontal &gt; .ant-menu-submenu:hover&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;.ant-menu-horizontal &gt; .ant-menu-item-active,.ant-menu-horizontal &gt; .ant-menu-item-open,.ant-menu-horizontal &gt; .ant-menu-item-selected,.ant-menu-horizontal:not(.ant-menu-dark) &gt; .ant-menu-item:hover,.ant-menu-horizontal &gt; .ant-menu-submenu-active,.ant-menu-horizontal &gt; .ant-menu-submenu-open,.ant-menu-horizontal:not(.ant-menu-dark) &gt; .ant-menu-submenu-selected,.ant-menu-horizontal:not(.ant-menu-dark) &gt; .ant-menu-submenu:hover&#39;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-menu-horizontal &gt; .ant-menu-item-selected &gt; a&#39;</span><span class="token operator">:</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-menu-horizontal&gt;.ant-menu-item-selected&gt;a&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;.ant-menu-horizontal:not(ant-menu-light):not(.ant-menu-dark) &gt; .ant-menu-item-selected &gt; a&#39;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-menu-horizontal &gt; .ant-menu-item &gt; a:hover&#39;</span><span class="token operator">:</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-menu-horizontal&gt;.ant-menu-item&gt;a:hover&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;.ant-menu-horizontal:not(ant-menu-light):not(.ant-menu-dark) &gt; .ant-menu-item &gt; a:hover&#39;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-checkbox-checked .ant-checkbox-inner&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;.ant-checkbox-checked:not(.ant-checkbox-disabled) .ant-checkbox-inner&#39;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;.ant-radio-button-wrapper:hover&#39;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;.ant-radio-button-wrapper:not(.ant-radio-button-wrapper-disabled):hover&#39;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">return</span> selector
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loaderOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">less</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">modifyVars</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">// less vars，customize ant design theme</span>
          <span class="token string-property property">&#39;primary-color&#39;</span><span class="token operator">:</span> variables<span class="token punctuation">.</span>mainColor<span class="token punctuation">,</span>
          <span class="token string-property property">&#39;info-color&#39;</span><span class="token operator">:</span> variables<span class="token punctuation">.</span>mainColor<span class="token punctuation">,</span>
          <span class="token string-property property">&#39;success-color&#39;</span><span class="token operator">:</span> variables<span class="token punctuation">.</span>greenColor<span class="token punctuation">,</span>
          <span class="token string-property property">&#39;processing-color&#39;</span><span class="token operator">:</span> variables<span class="token punctuation">.</span>mainColor<span class="token punctuation">,</span>
          <span class="token string-property property">&#39;error-color&#39;</span><span class="token operator">:</span> variables<span class="token punctuation">.</span>redColor<span class="token punctuation">,</span>
          <span class="token string-property property">&#39;highlight-color&#39;</span><span class="token operator">:</span> variables<span class="token punctuation">.</span>redColor<span class="token punctuation">,</span>
          <span class="token string-property property">&#39;warning-color&#39;</span><span class="token operator">:</span> variables<span class="token punctuation">.</span>orangeColor
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// DO NOT REMOVE THIS LINE</span>
        <span class="token literal-property property">javascriptEnabled</span><span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ThemeColorReplacerPlugin<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token literal-property property">pluginOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;style-resources-loader&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">preProcessor</span><span class="token operator">:</span> <span class="token string">&#39;less&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 自动引入全局less</span>
      <span class="token literal-property property">patterns</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>
          __dirname<span class="token punctuation">,</span>
          <span class="token string">&#39;node_modules/ant-design-vue/lib/style/color/colorPalette.less&#39;</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src/styles/variables.less&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置讲解" tabindex="-1"><a class="header-anchor" href="#配置讲解" aria-hidden="true">#</a> 配置讲解</h2><p>因为项目中 Ant 自定义主题是通过 <code>modifyVars</code> 方式配置，但是又不想同时在项目中多处地方写同一个颜色，所以自己写了个 <code>getVaribles</code> 方法，读取目录下面的 <code>variables.less</code> 文件，转换得到想要得数据在 <code>modifyVars</code> 中使用。</p><p>其中 <code>getAntdSerials</code> 方法和官方 Admin 平台的代码基本上一致，区别在于 rgb 颜色，因为项目代码很多地方使用了 Less 提供的 fade 方法，将颜色转换成百分比，即 rgba 带透明度的颜色，所以额外处理了下 <code>generate</code> 生成的颜色都转了下 rgb。<br><code>ThemeColorReplacerPlugin</code> 插件配置也基本一致，唯一不同的是 <code>matchColors</code> 参数，因为项目需要多个颜色配置换肤，写了个 <code>getMatchColors</code> 方法，将 <code>mainColor、greenColor</code> 等颜色按顺序生成色值列表。</p><p><code>changeSelector</code> 中基本不变，如果出现颜色被覆盖的情况，可以通过该方法解决。<br> 比如未禁用状态下选中的 <code>Checkbox</code>，<code>.ant-checkbox-checked .ant-checkbox-inner</code> 下面有个 <code>background-color</code> 和 <code>border-color</code>。</p><figure><img src="https://image.liubing.me/2023/02/04/78e6da06b9fce.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>禁用状态下会有个 <code>disabled</code> 样式颜色覆盖原来的颜色。</p><figure><img src="https://image.liubing.me/2023/02/04/61578232735f7.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>但是换色后该插件会匹配到<code>.ant-checkbox-checked .ant-checkbox-inner</code> 下面有需要换色的颜色，生成的内联 <code>style</code> 样式会插入到 <code>body</code> 后面，导致这个 <code>class</code> 的优先级会很高，会覆盖掉 <code>disabled</code> 的样式，可以很清楚的看到蓝色框出来的是原有的样式，灰色框出来的是禁用的样式，红色框出来的是原有样式按新颜色重新生成的，优先级会比 <code>disabled</code> 的样式要高，这不是我们想要的，此时很明显就是样式是冲突了。</p><figure><img src="https://image.liubing.me/2023/02/04/2d98b073a6f0e.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>解决冲突就需要借助 <code>changeSelector</code>，需要排除掉 <code>disabled</code> 样式的 <code>class</code>,可以通过匹配<code>.ant-checkbox-checked .ant-checkbox-inner</code>，返回一个新的 <code>class</code> 样式排除掉 <code>disabled</code> 样式，这样就不会有冲突了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">case</span> <span class="token string">&#39;.ant-checkbox-checked .ant-checkbox-inner&#39;</span><span class="token operator">:</span>
  <span class="token keyword">return</span> <span class="token string">&#39;.ant-checkbox-checked:not(.ant-checkbox-disabled) .ant-checkbox-inner&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="调用配置" tabindex="-1"><a class="header-anchor" href="#调用配置" aria-hidden="true">#</a> 调用配置</h2>`,13),I=s("code",null,"matchColors",-1),$={href:"https://github.com/vueComponent/ant-design-vue-pro/blob/master/src/components/SettingDrawer/themeColor.js",target:"_blank",rel:"noopener noreferrer"},B=s("code",null,"vue.config.js",-1),G=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> client <span class="token keyword">from</span> <span class="token string">&#39;webpack-theme-color-replacer/client&#39;</span>
<span class="token keyword">import</span> generate <span class="token keyword">from</span> <span class="token string">&#39;@ant-design/colors/lib/generate&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">getAntdSerials</span><span class="token punctuation">(</span><span class="token parameter">color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 淡化（即less的tint）</span>
    <span class="token keyword">const</span> lightens <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> client<span class="token punctuation">.</span>varyColor<span class="token punctuation">.</span><span class="token function">lighten</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> i <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// colorPalette变换得到颜色值</span>
    <span class="token keyword">const</span> colorPalettes <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>
    <span class="token keyword">const</span> rgbColors <span class="token operator">=</span> colorPalettes<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      client<span class="token punctuation">.</span>varyColor<span class="token punctuation">.</span><span class="token function">toNum3</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>lightens<span class="token punctuation">,</span> <span class="token operator">...</span>colorPalettes<span class="token punctuation">,</span> <span class="token operator">...</span>rgbColors<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">changeColor</span><span class="token punctuation">(</span><span class="token parameter">colorsMap</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// 颜色顺序需要和matchColors严格一致</span>
    <span class="token keyword">const</span> colorNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;mainColor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;greenColor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orangeColor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;redColor&#39;</span><span class="token punctuation">]</span>
    colorNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      newColors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>newColors<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAntdSerials</span><span class="token punctuation">(</span>colorsMap<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
      newColors <span class="token comment">// new colors array, one-to-one corresponde with \`matchColors\`</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> client<span class="token punctuation">.</span>changer<span class="token punctuation">.</span><span class="token function">changeColor</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> Promise<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到 <code>getAntdSerials</code> 方法和 <code>vue.config.js</code> 里面的基本一致，<code>changeColor</code> 方法接受一个颜色 Map 对象，该对象可以在本地维护或者配置在数据里面，如下形式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">mainColor</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">greenColor</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">orangeColor</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">redColor</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span>
  <span class="token comment">// 其他颜色</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>里面的内容基本和 <code>vue.config.js</code> 中的 <code>getMatchColors</code> 类似，按顺序生成相关颜色的列表，该列表颜色顺序需要和 <code>matchColors</code> 配置的颜色顺序严格保持一致。</p><p>最后可以在 <code>util</code> 里面写个通用的方法 <code>updateTheme</code> 调用 <code>changeColor</code> 即可。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> themeColor <span class="token keyword">from</span> <span class="token string">&#39;./themeColor.js&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">updateTheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">colorsMap</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  themeColor<span class="token punctuation">.</span><span class="token function">changeColor</span><span class="token punctuation">(</span>colorsMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 切换完成可以做些其他操作，比如弹个提示切换成功</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="示例-demo" tabindex="-1"><a class="header-anchor" href="#示例-demo" aria-hidden="true">#</a> 示例 Demo</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Demo 比较粗糙，未做颜色的校验，会出现同一种颜色切换的时候换色异常问题。</p></div>`,8),J={href:"https://github.com/liub1934/ant-vue-change-theme",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.liubing.me/ant-vue-change-theme/",target:"_blank",rel:"noopener noreferrer"},W=e('<figure><img src="https://image.liubing.me/2023/02/04/f11baa52a7597.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h2><p>最后说说该方案的缺点，因为插件 <code>webpack-theme-color-replacer</code> 是根据 <code>matchColors</code> 颜色去匹配相关颜色的 class，然后根据 class 生成一套新的颜色样式覆盖原来的样式。</p><ul><li>缺点 1：匹配的颜色不能有重复，比如主色 mainColor，绿色 greenColor 是不能够配置同样的色值的，包括衍生出来的色值也不能有重复的，不然匹配颜色替换的时候会出问题，解决方法是可以使用 2 个色值相近肉眼无法分辨差异的颜色。</li><li>缺点 2：无法替换元素 style 样式的颜色，比如下方这种形式，插件是无法替换主色#1890ff 的，解决方法是取消在元素 style 中指定需要变换的颜色，用 class 去代替颜色设置。</li></ul><p>综上所述在实际项目中，配置的配色方案需要严格校验相关颜色是否有重复。</p>',5);function K(Q,X){const a=p("ExternalLinkIcon");return c(),l("div",null,[r,s("p",null,[n("由于项目老平台使用的 UI 框架是 Ant Vue 1.x 的版本，首先考虑的就是官方自己的"),s("a",k,[n("Pro Admin"),t(a)]),n("平台的方案，由于 Ant Admin 的方案只支持了主题色换肤，而内容项目平台是需要支持多种颜色换肤，如主题色、各个功能色，超链接等颜色换肤。既然官方的 Admin 平台支持换肤，咱们就去具体研究下怎么实现的，既然支持一种那应该也支持多种颜色的换肤的。")]),i(" more "),d,s("p",null,[n("通过阅读代码可以定位到侧边栏功能的代码："),s("a",v,[n("点击去查看"),t(a)]),n("，里面可以找到"),m,n("字样。")]),s("p",null,[n("通过代码就可以知道切换颜色的时候调用的是 "),b,n(" 里面的 "),s("a",g,[n("changeColor"),t(a)]),n(" 方法，可以看下 "),h,n(" 里面的代码：")]),f,s("p",null,[n("通过"),y,n(" 最终知道使用的是"),s("a",C,[n("webpack-theme-color-replacer"),t(a)]),n("插件，这样我们就可以去研究下该插件了。")]),w,s("p",null,[n("通过 Google 搜索和研究该插件的"),s("a",_,[n("Demo"),t(a)]),n("后，大致知道了基本原理，就是根据插件配置的 "),x,n("，在进行颜色变更的时候传入和配置的 "),P,n(" 保持顺序一致的新颜色 "),j,n("，插件会根据颜色匹配到样式文件中相应的 "),z,n(" 样式，从而根据该样式重新生成一套新的 "),A,n(" 样式覆盖原有的样式。")]),S,s("p",null,[n("从上图中我们可以知道 "),N,n("方法 可以将 1 个颜色衍生出从浅到深的 10 个颜色，通过研究代码，可以发现 Ant 在 Less 中也实现了一套该方法，具体参考 "),s("a",V,[n("colors.less"),t(a)]),n("，里面的每个颜色都是根据一个序号为 6 的颜色，根据 "),T,n(" 方法生成了一套颜色，然后根据其"),s("a",M,[n("默认的主题文件"),t(a)]),n("，就知道了每个颜色的主色是生成颜色列表中的第 6 个颜色。")]),D,s("p",null,[n("回头看 "),s("a",E,[n("colors.less"),t(a)]),n(" 文件中可以发现文件头引入了 "),s("a",R,[n("colorPalette"),t(a)]),n(" 方法，此处我们也可以通过全局引入的方法将 "),U,n(" 在我们的项目中引入并使用。")]),L,s("p",null,[n("接下来我们可以参考 Ant Admin 的"),s("a",O,[n("config"),t(a)]),n("配置文件，最终完成如下的 "),q,n(" 配置，大概内容如下：")]),F,s("p",null,[n("以上的配置主要是给插件的的 "),I,n(" 做准备的，此时还需要页面上调用换色的方法，可以直接把 Ant Admin 里面的 "),s("a",$,[n("themeColor.js"),t(a)]),n(" 拿过来稍微按 "),B,n(" 里面配置同逻辑稍微修改下即可。")]),G,s("p",null,[n("Demo 项目地址："),s("a",J,[n("点击查看"),t(a)])]),s("p",null,[n("Demo 预览："),s("a",H,[n("点击查看"),t(a)])]),W])}const Z=o(u,[["render",K],["__file","ant-design-vue-change-theme.html.vue"]]);export{Z as default};
